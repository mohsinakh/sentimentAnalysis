{"version":3,"file":"static/js/17.73a56f8e.chunk.js","mappings":"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","sources":["pages/Navbar.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faUser, faInfoCircle, faEnvelope, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { AuthContext } from '../context/AuthContext';\nimport \"./css/Navbar.css\";\nimport logo from \"../img/logo.png\"\nimport { faServicestack } from '@fortawesome/free-brands-svg-icons';\n\nfunction Navbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const { token, logout } = useContext(AuthContext);\n  const location = useLocation();\n  const [activePath, setActivePath] = useState(location.pathname); // Initialize activePath with the current path\n  const sideNavRef = useRef(null);\n\n  const toggleSidebar = () => {\n    setIsOpen((prevState) => !prevState); // Correctly toggle the state\n  };\n\n  // Update activePath whenever the location changes\n  useEffect(() => {\n    setActivePath(location.pathname);\n  }, [location]);\n\n  // Close sidebar if click is outside the side nav (mobile)\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Close sidebar if click is outside of the sidebar and the hamburger button\n      if (\n        sideNavRef.current &&\n        !sideNavRef.current.contains(event.target) &&\n        !event.target.closest(\".hamburger\") &&\n        isOpen\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    // Add event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    // Clean up event listener on component unmount\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen]); // Add isOpen as a dependency to close when it's open\n\n  const handleNavClick = (path) => {\n    setActivePath(path);\n    if (isOpen) setIsOpen(false); // Close sidebar after clicking a navigation item (for mobile)\n  };\n\n  return (\n    <div >\n      {/* Header Section */}\n      <header>\n        <div className=\"logo\">\n\n          <Link to=\"/\"><img src={logo} alt='' className='logo-img'></img>Sensiment</Link>\n        </div>\n\n        {/* Desktop Navigation */}\n        <nav className=\"desktop-nav\">\n          <ul className=\"nav-links\">\n            <li>\n              <Link\n                to=\"/\"\n                className={`nav-link ${activePath === \"/\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/\")}\n              >\n                <FontAwesomeIcon icon={faHome} /> Home\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/profile\"\n                className={`nav-link ${activePath === \"/profile\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/profile\")}\n              >\n                <FontAwesomeIcon icon={faUser} /> Profile\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/about\"\n                className={`nav-link ${activePath === \"/about\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/about\")}\n              >\n                <FontAwesomeIcon icon={faInfoCircle} /> About Us\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/#services\"\n                className={`nav-link ${activePath === \"/services\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/services\")}\n              >\n                <FontAwesomeIcon icon={faServicestack} /> Services\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/blog\"\n                className={`nav-link ${activePath === \"/blog\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/blog\")}\n              >\n                <FontAwesomeIcon icon={faInfoCircle} /> Blog\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/contact\"\n                className={`nav-link ${activePath === \"/contact\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/contact\")}\n              >\n                <FontAwesomeIcon icon={faEnvelope} /> Contact Us\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/faqs\"\n                className={`nav-link ${activePath === \"/faqs\" ? \"active\" : \"\"}`}\n                onClick={() => handleNavClick(\"/faqs\")}\n              >\n                <FontAwesomeIcon icon={faQuestionCircle} /> FAQs\n              </Link>\n            </li>\n            {token ? (\n              <li>\n                <button onClick={logout} className=\"nav-link btn btn\">\n                  Logout\n                </button>\n              </li>\n            ) : (\n              <li>\n                <Link to=\"/login\" className=\"btn btn\">\n                  Login/SignUp\n                </Link>\n              </li>\n            )}\n          </ul>\n        </nav>\n\n        {/* Hamburger Icon (Mobile) */}\n        <button className={`hamburger ${isOpen ? \"open\" : \"\"}`} onClick={toggleSidebar}>\n          <span className=\"bar\"></span>\n          <span className=\"bar\"></span>\n          <span className=\"bar\"></span>\n        </button>\n      </header>\n\n      {/* Side Navigation (Mobile) */}\n      <nav ref={sideNavRef} className={`side-nav ${isOpen ? \"open\" : \"\"}`}>\n        <ul>\n          <li>\n            <Link\n              to=\"/\"\n              className={`nav-link ${activePath === \"/\" ? \"active\" : \"\"}`}\n              onClick={() => handleNavClick(\"/\")}\n            >\n              <FontAwesomeIcon icon={faHome} /> Home\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/profile\"\n              className={`nav-link ${activePath === \"/profile\" ? \"active\" : \"\"}`}\n              onClick={() => handleNavClick(\"/profile\")}\n            >\n              <FontAwesomeIcon icon={faUser} /> Profile\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/about\"\n              className={`nav-link ${activePath === \"/about\" ? \"active\" : \"\"}`}\n              onClick={() => handleNavClick(\"/about\")}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} /> About\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/contact\"\n              className={`nav-link ${activePath === \"/contact\" ? \"active\" : \"\"}`}\n              onClick={() => handleNavClick(\"/contact\")}\n            >\n              <FontAwesomeIcon icon={faEnvelope} /> Contact\n            </Link>\n          </li>\n\n          {token ? (\n            <li>\n              <button onClick={logout} className=\"nav-link btn btn\">\n                Logout\n              </button>\n            </li>\n          ) : (\n            <li>\n              <Link to=\"/login\" className=\"btn btn\">\n                Login/SignUp\n              </Link>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n"],"names":["isOpen","setIsOpen","useState","token","logout","useContext","AuthContext","location","useLocation","activePath","setActivePath","pathname","sideNavRef","useRef","useEffect","handleClickOutside","event","current","contains","target","closest","document","addEventListener","removeEventListener","handleNavClick","path","_jsxs","children","_jsx","className","Link","to","src","logo","alt","concat","onClick","FontAwesomeIcon","icon","faHome","faUser","faInfoCircle","faServicestack","faEnvelope","faQuestionCircle","toggleSidebar","prevState","ref"],"sourceRoot":""}