{"version":3,"file":"static/js/570.ca5dbe5d.chunk.js","mappings":"63FAKA,MAoGA,EApGaA,KACX,MACOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACzC,UAAEC,IAAcC,EAAAA,EAAAA,KAGhBC,EALe,EAKGL,EAClBM,EAAmBD,EANJ,EAOfE,EAAeC,EAAAA,EAAeC,MAAMH,EAAkBD,GAUtDK,EAAaC,KAAKC,KAAKJ,EAAAA,EAAeK,OAjBvB,GAmBrB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAE7BF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAaC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yGAOLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,WAASF,UAAU,aAAYC,SAC5BT,EAAaW,KAAI,CAACC,EAAMC,KACvBN,EAAAA,EAAAA,MAAA,WAASC,UAAU,YAAWC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGI,KAAMF,EAAKG,KAAMC,OAAO,SAASC,IAAI,sBAAuBC,QAASA,IAAMtB,EAAU,4BAA6B,QAAQa,SAC1HG,EAAKO,WAGVT,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAKQ,eACTV,EAAAA,EAAAA,KAAA,OACEW,IAAKT,EAAKU,MACVC,IAAKX,EAAKO,MACVX,UAAU,gBAEZE,EAAAA,EAAAA,KAAA,KACEI,KAAMF,EAAKG,KACXC,OAAO,SACPC,IAAI,sBACJT,UAAU,YACVU,QAASA,IAAMtB,EAAU,4BAA6B,QAASa,SAChE,gBAlBiCI,QA0BxCH,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAASC,UAExBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGR,EAAAA,EAAeC,MAAM,EAAG,GAAGS,KAAI,CAACC,EAAMC,KACrCH,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KACEI,KAAMF,EAAKG,KACXC,OAAO,SACPC,IAAI,sBACJC,QAASA,IAAMtB,EAAU,2BAA4B,QAASa,SAE7DG,EAAKO,SAPDN,gBAiBnBH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SACxB,IAAIe,MAAMrB,IAAaQ,KAAI,CAACc,EAAGZ,KAC9BH,EAAAA,EAAAA,KAAA,UAEEF,UAAU,WACVU,QAASA,KA9EjBxB,EA8EgCmB,EAAQ,GA7ExCa,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,gBACpCjC,EAAU,6BAA8B,YA4EGa,SAElCI,EAAQ,GAJJA,EAAQ,SAQf,C","sources":["pages/Blog.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./css/Blog.css\";\nimport blogData from \"../blog.json\";\nimport { useToast } from '../context/ToastContext'; // Importing the toast context\n\nconst Blog = () => {\n  const postsPerPage = 3; // Number of posts to display per page\n  const [currentPage, setCurrentPage] = useState(1);\n  const { showToast } = useToast(); // Using the toast context\n\n  // Calculate the indices for slicing the blog posts array\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = blogData.blogs.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Function to handle page change and scroll to top\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({ top: 0, behavior: 'smooth' }); // Scroll to top smoothly\n    showToast('Page changed successfully!', 'success'); // Trigger a toast notification\n  };\n\n  // Total number of pages\n  const totalPages = Math.ceil(blogData.blogs.length / postsPerPage);\n\n  return (\n    <div className=\"blog-container\">\n      {/* Blog Header */}\n      <header className=\"blog-header\">\n        <h1>Insights & Articles</h1>\n        <p>\n          Stay updated with the latest trends, news, and insights in sentiment\n          analysis and AI technology.\n        </p>\n      </header>\n\n      {/* Blog Content */}\n      <div className=\"blog-content\">\n        {/* Main Blog Posts Section */}\n        <section className=\"blog-posts\">\n          {currentPosts.map((blog, index) => (\n            <article className=\"blog-post\" key={index}>\n              <h2>\n                <a href={blog.link} target=\"_blank\" rel=\"noopener noreferrer\"  onClick={() => showToast('Redirecting to article...', 'info')}>\n                  {blog.title}\n                </a>\n              </h2>\n              <p>{blog.description}</p>\n              <img\n                src={blog.image}\n                alt={blog.title}\n                className=\"blog-image\"\n              />\n              <a\n                href={blog.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"read-more\"\n                onClick={() => showToast('Redirecting to article...', 'info')} // Trigger toast on read more\n              >\n                Read More\n              </a>\n            </article>\n          ))}\n        </section>\n\n        {/* Sidebar */}\n        <aside className=\"sidebar\">\n          {/* Recent Posts */}\n          <div className=\"recent-posts\">\n            <h3>Recent Posts</h3>\n            <ul>\n              {blogData.blogs.slice(0, 5).map((blog, index) => (\n                <li key={index}>\n                  <a\n                    href={blog.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    onClick={() => showToast('Viewing a recent post...', 'info')} // Toast for recent posts\n                  >\n                    {blog.title}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </aside>\n      </div>\n\n      {/* Pagination */}\n      <div className=\"pagination\">\n        {[...Array(totalPages)].map((_, index) => (\n          <button\n            key={index + 1}\n            className=\"page-btn\"\n            onClick={() => paginate(index + 1)}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"names":["Blog","currentPage","setCurrentPage","useState","showToast","useToast","indexOfLastPost","indexOfFirstPost","currentPosts","blogData","slice","totalPages","Math","ceil","length","_jsxs","className","children","_jsx","map","blog","index","href","link","target","rel","onClick","title","description","src","image","alt","Array","_","window","scrollTo","top","behavior"],"sourceRoot":""}